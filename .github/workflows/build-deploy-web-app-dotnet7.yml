name: Build and deploy .NET Core application to Web App dotnet7-template
on:
  push:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: dotnet7-template
  AZURE_WEBAPP_PACKAGE_PATH: .
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 7.0.x
  WORKING_DIRECTORY: .
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
        
    - name: Restore dependencies  # Step to restore NuGet dependencies.
      working-directory: ./API/  # Change the working directory to ./API/.
      run: dotnet restore  # Use dotnet CLI to restore the NuGet packages.
      
    - name: Build  # Step to build the .NET Core project.
      working-directory: ./API/  # Change the working directory to ./API/
      run: dotnet build --no-restore --configuration Release  # Use dotnet CLI to build the project without restoring again.
   
    - uses: Azure/login@v1  # Step to log in to Azure using the provided credentials.
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}  # Access Azure credentials from GitHub secrets.
        enable-AzPSSession: true
        allow-no-subscriptions: true
        
    - uses: Azure/get-keyvault-secrets@v1  # Step to get secrets from Azure Key Vault.
      with:
        keyvault: "api-template-key-vault"  # Specify the Azure Key Vault name.
        secrets: 'SqlServerStaging, SeqUrl, JwtValidAudience, JwtPrivateKey'  # Specify the secret name to retrieve.
      id: azKeyVaultSecretAction  # Assign an ID to this step for later reference.
    
    - name: Replace token for appsettings.json  # Step to replace tokens in appsettings.json with secret values.
      uses: cschleiden/replace-tokens@v1.1
      with:
        files: '**/appsettings.json'  # Use appsettings.json files to replace tokens.
      env:
        SqlServer: ${{ steps.azKeyVaultSecretAction.outputs.SqlServerStaging }}  # Use the retrieved secret value as an environment variable.
        SeqUrl: ${{ steps.azKeyVaultSecretAction.outputs.SeqUrl }}  
        JwtValidAudience: ${{ steps.azKeyVaultSecretAction.outputs.JwtValidAudience }} 
        JwtPrivateKey: ${{ steps.azKeyVaultSecretAction.outputs.JwtPrivateKey }} 
    
    - name: Publish
      working-directory: ./API/ 
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" -c Release

    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:  
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp using publish profile credentials
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_APP_SERVICE_LINUX }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

name: Build and deploy .NET Core application to Web App dotnet7-template
on:
  push:
    branches:
    - main
env:
  AZURE_WEBAPP_NAME: dotnet7-template
  AZURE_WEBAPP_PACKAGE_PATH: .\publish
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 7.0.x
  WORKING_DIRECTORY: .
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build
    
    - uses: Azure/get-keyvault-secrets@v1  # Step to get secrets from Azure Key Vault.
      with:
        keyvault: "api-template-key-vault"  # Specify the Azure Key Vault name.
        secrets: 'SqlServerStaging, SeqUrl, JwtValidAudience, JwtPrivateKey'  # Specify the secret name to retrieve.
      id: azKeyVaultSecretAction  # Assign an ID to this step for later reference.
    
    - name: Replace token for appsettings.json  # Step to replace tokens in appsettings.json with secret values.
      uses: cschleiden/replace-tokens@v1.1
      with:
        files: '**/appsettings.json'  # Use appsettings.json files to replace tokens.
      env:
        SqlServer: ${{ steps.azKeyVaultSecretAction.outputs.SqlServerStaging }}  # Use the retrieved secret value as an environment variable.
        SeqUrl: ${{ steps.azKeyVaultSecretAction.outputs.SeqUrl }}  
        JwtValidAudience: ${{ steps.azKeyVaultSecretAction.outputs.JwtValidAudience }} 
        JwtPrivateKey: ${{ steps.azKeyVaultSecretAction.outputs.JwtPrivateKey }} 
    
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  deploy:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.dotnet7_template_6EA5 }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
